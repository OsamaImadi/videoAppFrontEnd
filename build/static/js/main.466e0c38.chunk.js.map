{"version":3,"sources":["services/logService.js","services/httpService.js","services/movieService.js","components/common/like.jsx","components/common/tableHeader.jsx","components/common/tableBody.jsx","components/common/table.jsx","components/moviesTable.jsx","components/common/pagination.jsx","components/common/listGroup.jsx","services/genreService.js","components/common/searchBox.jsx","components/movies.jsx","utils/paginate.js","components/customers.jsx","components/rentals.jsx","components/notFound.jsx","components/navBar.jsx","components/common/input.jsx","components/common/select.jsx","components/common/form.jsx","components/movieForm.jsx","services/authService.js","components/loginForm.jsx","services/userService.js","components/registerForm.jsx","components/logout.jsx","App.js","serviceWorker.js","index.js"],"names":["logService","init","log","error","console","axios","defaults","baseURL","process","interceptors","response","use","status","toast","logger","Promise","reject","httpService","get","post","put","delete","setJwt","jwt","headers","common","apiEndpoint","getMovieUrl","id","concat","getMovie","movieId","http","saveMovie","movie","_id","body","Object","objectSpread","Like","props","classes","liked","react_default","a","createElement","onClick","style","cursor","className","aria-hidden","TableHeader","raiseSort","path","sortColumn","_this","order","onSort","renderSortIcon","column","_this2","this","columns","map","key","label","Component","TableBody","renderCell","item","content","_","createKey","_this$props","data","Table","_ref","tableHeader","tableBody","MoviesTable","Link","to","title","like","onLike","onDelete","movies","table","Pagination","itemsCount","pageSize","onPageChange","currentPage","pagesCount","Math","ceil","pages","range","page","ListGroup","items","textProperty","valueProperty","onItemSelect","selectedItem","defaultProps","getGenres","SearchBox","value","onChange","type","name","placeholder","e","currentTarget","Movies","state","genres","searchQuery","selectedGenre","handleDelete","_callee","originalMovies","regenerator_default","wrap","_context","prev","next","filter","m","setState","t0","stop","handleLike","toConsumableArray","index","indexOf","handlePageChange","handleGenreSelect","genre","handleSearch","query","currrentPAge","handleSort","getPagedData","_this$state","allMovies","filtered","toLowerCase","startsWith","pageNumber","startIndex","slice","take","paginate","orderBy","totalCount","length","count","_this$state2","user","_this$getPagedData","listGroup","marginBottom","searchBox","moviesTable","pagination","Customers","Rentals","NotFound","NavBar","data-toggle","data-target","aria-controls","aria-expanded","aria-label","NavLink","Fragment","Input","errors","rest","objectWithoutProperties","htmlFor","assign","Select","options","Form","validate","Joi","schema","abortEarly","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","details","Symbol","iterator","done","message","err","return","validateProperty","obj","defineProperty","handleSubmit","preventDefault","doSubmit","handleChange","_ref2","input","errorMessage","renderButton","disabled","common_select","arguments","common_input","MovieForm","genreId","numberInStock","dailyRentalRate","string","required","number","min","max","match","params","mapToViewModel","_context2","history","replace","populateGenre","populateMovie","push","onSubmit","renderInput","renderSelect","tokenKey","Login","_x","_x2","_Login","apply","email","password","sent","localStorage","setItem","getItem","LoginForm","username","window","location","Register","Logout","removeItem","App","jwtDecode","ex","getCurrentUser","lib","navBar","Switch","Route","render","movieForm","Redirect","components_movies","component","RegisterForm","from","exact","Boolean","hostname","ReactDOM","BrowserRouter","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.466e0c38.chunk.js","sourcesContent":["function init() {}\r\n\r\nfunction log(error) {\r\n  console.log(error);\r\n}\r\n\r\nexport default {\r\n  init,\r\n  log\r\n};\r\n","import axios from \"axios\";\r\nimport { toast } from \"react-toastify\";\r\nimport logger from \"./logService\";\r\n\r\naxios.defaults.baseURL = process.env.REACT_APP_API_URL;\r\n\r\naxios.interceptors.response.use(null, error => {\r\n  const expectedError =\r\n    error.response &&\r\n    error.response.status >= 400 &&\r\n    error.response.status < 500;\r\n  if (!expectedError) {\r\n    toast.error(\"An unexpected error occured\");\r\n    logger.log(error);\r\n  }\r\n  return Promise.reject(error);\r\n});\r\n\r\nfunction setJwt(jwt) {\r\n  axios.defaults.headers.common[\"x-auth-token\"] = jwt;\r\n}\r\n\r\nexport default {\r\n  get: axios.get,\r\n  post: axios.post,\r\n  put: axios.put,\r\n  delete: axios.delete,\r\n  setJwt\r\n};\r\n","import http from \"./httpService\";\r\n\r\nconst apiEndpoint = \"/movies\";\r\n\r\nfunction getMovieUrl(id) {\r\n  return `${apiEndpoint}/${id}`;\r\n}\r\nexport function getMovies() {\r\n  return http.get(apiEndpoint);\r\n}\r\n\r\nexport function getMovie(movieId) {\r\n  return http.get(getMovieUrl(movieId));\r\n}\r\n\r\nexport function saveMovie(movie) {\r\n  if (movie._id) {\r\n    const body = { ...movie };\r\n    delete body._id;\r\n    return http.put(getMovieUrl(movie._id), body);\r\n  }\r\n\r\n  return http.post(apiEndpoint, movie);\r\n}\r\n\r\nexport function deleteMovie(movieId) {\r\n  return http.delete(getMovieUrl(movieId));\r\n}\r\n","import React, { Component } from \"react\";\r\n\r\nconst Like = props => {\r\n  let classes = \"fa fa-heart\";\r\n  if (!props.liked) classes += \"-o\";\r\n  return (\r\n    <i\r\n      onClick={props.onClick}\r\n      style={{ cursor: \"pointer\" }}\r\n      className={classes}\r\n      aria-hidden=\"true\"\r\n    />\r\n  );\r\n};\r\n\r\nexport default Like;\r\n","import React, { Component } from \"react\";\r\n\r\nclass TableHeader extends Component {\r\n  raiseSort = path => {\r\n    const sortColumn = { ...this.props.sortColumn };\r\n    if (sortColumn.path === path) {\r\n      sortColumn.order = sortColumn.order === \"asc\" ? \"desc\" : \"asc\";\r\n    } else {\r\n      sortColumn.path = path;\r\n      sortColumn.order = \"asc\";\r\n    }\r\n    this.props.onSort(sortColumn);\r\n  };\r\n\r\n  renderSortIcon = column => {\r\n    const { sortColumn } = this.props;\r\n    if (column.path !== sortColumn.path) return null;\r\n    if (sortColumn.order === \"asc\") return <i className=\"fa fa-sort-asc\" />;\r\n    return <i className=\"fa fa-sort-desc\" />;\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <thead>\r\n        <tr>\r\n          {this.props.columns.map(column => (\r\n            <th\r\n              className=\"clickable\"\r\n              key={column.path || column.key}\r\n              onClick={() => this.raiseSort(column.path)}\r\n            >\r\n              {column.label} {this.renderSortIcon(column)}\r\n            </th>\r\n          ))}\r\n        </tr>\r\n      </thead>\r\n    );\r\n  }\r\n}\r\n\r\nexport default TableHeader;\r\n","import React, { Component } from \"react\";\r\nimport _ from \"lodash\";\r\n\r\nclass TableBody extends Component {\r\n  renderCell = (item, column) => {\r\n    if (column.content) return column.content(item);\r\n\r\n    return _.get(item, column.path);\r\n  };\r\n\r\n  createKey = (item, column) => {\r\n    return item._id + (column.path || column.key);\r\n  };\r\n\r\n  render() {\r\n    const { data, columns } = this.props;\r\n\r\n    return (\r\n      <tbody>\r\n        {data.map(item => (\r\n          <tr key={item._id}>\r\n            {columns.map(column => (\r\n              <td key={this.createKey(item, column)}>\r\n                {this.renderCell(item, column)}\r\n              </td>\r\n            ))}\r\n          </tr>\r\n        ))}\r\n      </tbody>\r\n    );\r\n  }\r\n}\r\n\r\nexport default TableBody;\r\n","import React from \"react\";\r\nimport TableHeader from \"./tableHeader\";\r\nimport TableBody from \"./tableBody\";\r\n\r\nconst Table = ({ columns, sortColumn, onSort, data }) => {\r\n  return (\r\n    <table className=\"table\">\r\n      <TableHeader columns={columns} sortColumn={sortColumn} onSort={onSort} />\r\n      <TableBody columns={columns} data={data} />\r\n    </table>\r\n  );\r\n};\r\n\r\nexport default Table;\r\n","import React, { Component } from \"react\";\r\nimport Like from \"./common/like\";\r\nimport Table from \"./common/table\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nclass MoviesTable extends Component {\r\n  columns = [\r\n    {\r\n      path: \"title\",\r\n      label: \"title\",\r\n      content: movie => <Link to={`/movies/${movie._id}`}>{movie.title}</Link>\r\n    },\r\n    { path: \"genre.name\", label: \"Genre\" },\r\n    { path: \"numberInStock\", label: \"Stock\" },\r\n    { path: \"dailyRentalRate\", label: \"Rate\" },\r\n    {\r\n      key: \"like\",\r\n      content: movie => (\r\n        <Like liked={movie.liked} onClick={() => this.props.onLike(movie)} />\r\n      )\r\n    },\r\n    {\r\n      key: \"delete\",\r\n      content: movie => (\r\n        <button\r\n          onClick={() => this.props.onDelete(movie)}\r\n          className=\"btn btn-danger btn-sm\"\r\n        >\r\n          Delete\r\n        </button>\r\n      )\r\n    }\r\n  ];\r\n  render() {\r\n    const { movies, onSort, sortColumn } = this.props;\r\n\r\n    return (\r\n      <Table\r\n        columns={this.columns}\r\n        data={movies}\r\n        sortColumn={sortColumn}\r\n        onSort={onSort}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nexport default MoviesTable;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport _ from \"lodash\";\r\n\r\nconst Pagination = props => {\r\n  const { itemsCount, pageSize, onPageChange, currentPage } = props;\r\n  const pagesCount = Math.ceil(itemsCount / pageSize);\r\n  if (pagesCount === 1) return null;\r\n  const pages = _.range(1, pagesCount + 1);\r\n\r\n  return (\r\n    <nav>\r\n      <ul className=\"pagination\">\r\n        {pages.map(page => (\r\n          <li\r\n            key={page}\r\n            className={page === currentPage ? \"page-item active\" : \"page-item\"}\r\n          >\r\n            <a className=\"page-link\" onClick={() => onPageChange(page)}>\r\n              {page}\r\n            </a>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </nav>\r\n  );\r\n};\r\n\r\nPagination.propTypes = {\r\n  itemsCount: PropTypes.number.isRequired,\r\n  pageSize: PropTypes.number.isRequired,\r\n  currentPage: PropTypes.number.isRequired,\r\n  onPageChange: PropTypes.func.isRequired\r\n};\r\n\r\nexport default Pagination;\r\n","import React from \"react\";\r\n\r\nconst ListGroup = props => {\r\n  const {\r\n    items,\r\n    textProperty,\r\n    valueProperty,\r\n    onItemSelect,\r\n    selectedItem\r\n  } = props;\r\n  return (\r\n    <ul className=\"list-group\">\r\n      {items.map(item => (\r\n        <li\r\n          onClick={() => onItemSelect(item)}\r\n          key={item[valueProperty]}\r\n          className={\r\n            item === selectedItem ? \"list-group-item active\" : \"list-group-item\"\r\n          }\r\n        >\r\n          {item[textProperty]}\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nListGroup.defaultProps = {\r\n  textProperty: \"name\",\r\n  valueProperty: \"_id\"\r\n};\r\n\r\nexport default ListGroup;\r\n","import http from \"./httpService\";\r\n\r\nexport function getGenres() {\r\n  return http.get(\"/genres\");\r\n}\r\n","import React from \"react\";\r\n\r\nconst SearchBox = ({ value, onChange }) => {\r\n  return (\r\n    <input\r\n      type=\"text\"\r\n      name=\"query\"\r\n      className=\"form-control my-3\"\r\n      placeholder=\"Search...\"\r\n      value={value}\r\n      onChange={e => onChange(e.currentTarget.value)}\r\n    />\r\n  );\r\n};\r\n\r\nexport default SearchBox;\r\n","import React, { Component } from \"react\";\r\nimport { getMovies, deleteMovie } from \"../services/movieService\";\r\nimport MoviesTable from \"./moviesTable\";\r\nimport Pagination from \"./common/pagination\";\r\nimport { paginate } from \"../utils/paginate\";\r\nimport ListGroup from \"./common/listGroup\";\r\nimport { getGenres } from \"../services/genreService\";\r\nimport _ from \"lodash\";\r\nimport { Link } from \"react-router-dom\";\r\nimport SearchBox from \"./common/searchBox\";\r\nimport { toast } from \"react-toastify\";\r\n\r\nclass Movies extends Component {\r\n  state = {\r\n    movies: [],\r\n    genres: [],\r\n    currentPage: 1,\r\n    pageSize: 4,\r\n    searchQuery: \"\",\r\n    selectedGenre: null,\r\n    sortColumn: { path: \"title\", order: \"asc\" }\r\n  };\r\n\r\n  async componentDidMount() {\r\n    const { data } = await getGenres();\r\n    const genres = [{ _id: \"\", name: \"All Genres\" }, ...data];\r\n\r\n    const { data: movies } = await getMovies();\r\n    this.setState({ movies, genres });\r\n  }\r\n\r\n  handleDelete = async movie => {\r\n    const originalMovies = this.state.movies;\r\n    const movies = originalMovies.filter(m => m._id !== movie._id);\r\n    this.setState({ movies: movies });\r\n    try {\r\n      await deleteMovie(movie._id);\r\n    } catch (ex) {\r\n      if (ex.response && ex.response.status === 404)\r\n        toast.error(\"Movie already deleted\");\r\n      this.setState({ movies: originalMovies });\r\n    }\r\n  };\r\n\r\n  handleLike = movie => {\r\n    const movies = [...this.state.movies];\r\n    const index = movies.indexOf(movie);\r\n    movies[index] = { ...movies[index] };\r\n    movies[index].liked = !movies[index].liked;\r\n    this.setState({ movies });\r\n  };\r\n\r\n  handlePageChange = page => {\r\n    this.setState({ currentPage: page });\r\n  };\r\n\r\n  handleGenreSelect = genre => {\r\n    this.setState({ selectedGenre: genre, searchQuery: \"\", currentPage: 1 });\r\n  };\r\n\r\n  handleSearch = query => {\r\n    this.setState({ searchQuery: query, selectedGenre: null, currrentPAge: 1 });\r\n  };\r\n\r\n  handleSort = sortColumn => {\r\n    this.setState({ sortColumn });\r\n  };\r\n\r\n  getPagedData = () => {\r\n    const {\r\n      pageSize,\r\n      currentPage,\r\n      selectedGenre,\r\n      searchQuery,\r\n      movies: allMovies,\r\n      sortColumn\r\n    } = this.state;\r\n\r\n    let filtered = allMovies;\r\n    if (searchQuery) {\r\n      filtered = allMovies.filter(m =>\r\n        m.title.toLowerCase().startsWith(searchQuery.toLowerCase())\r\n      );\r\n    } else if (selectedGenre && selectedGenre._id) {\r\n      filtered = allMovies.filter(m => m.genre._id === selectedGenre._id);\r\n    }\r\n\r\n    const sorted = _.orderBy(filtered, [sortColumn.path], [sortColumn.order]);\r\n\r\n    const movies = paginate(sorted, currentPage, pageSize);\r\n\r\n    return { totalCount: filtered.length, data: movies };\r\n  };\r\n\r\n  render() {\r\n    const { length: count } = this.state.movies;\r\n    const { pageSize, currentPage, sortColumn } = this.state;\r\n    const { user } = this.props;\r\n    if (count === 0) return <p>There are no movies in the database</p>;\r\n\r\n    const { totalCount, data: movies } = this.getPagedData();\r\n    return (\r\n      <div className=\"row\">\r\n        <div className=\"col-3\">\r\n          <ListGroup\r\n            items={this.state.genres}\r\n            selectedItem={this.state.selectedGenre}\r\n            onItemSelect={this.handleGenreSelect}\r\n          />\r\n        </div>\r\n        <div className=\"col\">\r\n          {user && (\r\n            <Link\r\n              to=\"/movies/new\"\r\n              className=\"btn btn-primary\"\r\n              style={{ marginBottom: 20 }}\r\n            >\r\n              New Movie\r\n            </Link>\r\n          )}\r\n          <p>Showing {totalCount} movies in the db</p>\r\n          <SearchBox\r\n            value={this.state.searchQuery}\r\n            onChange={this.handleSearch}\r\n          />\r\n          <MoviesTable\r\n            movies={movies}\r\n            sortColumn={sortColumn}\r\n            onLike={this.handleLike}\r\n            onDelete={this.handleDelete}\r\n            onSort={this.handleSort}\r\n          />\r\n          <Pagination\r\n            itemsCount={totalCount}\r\n            pageSize={pageSize}\r\n            currentPage={currentPage}\r\n            onPageChange={this.handlePageChange}\r\n          />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Movies;\r\n","import _ from \"lodash\";\r\n\r\nexport function paginate(items, pageNumber, pageSize) {\r\n  const startIndex = (pageNumber - 1) * pageSize;\r\n  return _(items)\r\n    .slice(startIndex)\r\n    .take(pageSize)\r\n    .value();\r\n}\r\n","import React from \"react\";\r\n\r\nconst Customers = () => {\r\n  return <h1>Customers</h1>;\r\n};\r\n\r\nexport default Customers;\r\n","import React from \"react\";\r\n\r\nconst Rentals = () => {\r\n  return <h1>Rentals</h1>;\r\n};\r\n\r\nexport default Rentals;\r\n","import React from \"react\";\r\n\r\nconst NotFound = () => {\r\n  return <h1>Not found</h1>;\r\n};\r\n\r\nexport default NotFound;\r\n","import React from \"react\";\r\nimport { Link, NavLink } from \"react-router-dom\";\r\n\r\nconst NavBar = ({ user }) => {\r\n  return (\r\n    <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\r\n      <Link className=\"navbar-brand\" to=\"#\">\r\n        Vidly\r\n      </Link>\r\n      <button\r\n        className=\"navbar-toggler\"\r\n        type=\"button\"\r\n        data-toggle=\"collapse\"\r\n        data-target=\"#navbarNavAltMarkup\"\r\n        aria-controls=\"navbarNavAltMarkup\"\r\n        aria-expanded=\"false\"\r\n        aria-label=\"Toggle navigation\"\r\n      >\r\n        <span className=\"navbar-toggler-icon\" />\r\n      </button>\r\n      <div className=\"collapse navbar-collapse\" id=\"navbarNavAltMarkup\">\r\n        <div className=\"navbar-nav\">\r\n          <NavLink className=\"nav-item nav-link\" to=\"/movies\">\r\n            Movies\r\n          </NavLink>\r\n          <NavLink className=\"nav-item nav-link\" to=\"/customers\">\r\n            Customers\r\n          </NavLink>\r\n          <NavLink className=\"nav-item nav-link\" to=\"/rentals\">\r\n            Rentals\r\n          </NavLink>\r\n          {!user && (\r\n            <React.Fragment>\r\n              <NavLink className=\"nav-item nav-link\" to=\"/login\">\r\n                Login\r\n              </NavLink>\r\n              <NavLink className=\"nav-item nav-link\" to=\"/register\">\r\n                Register\r\n              </NavLink>\r\n            </React.Fragment>\r\n          )}\r\n          {user && (\r\n            <React.Fragment>\r\n              <NavLink className=\"nav-item nav-link\" to=\"/profile\">\r\n                {user.name}\r\n              </NavLink>\r\n              <NavLink className=\"nav-item nav-link\" to=\"/logout\">\r\n                Logout\r\n              </NavLink>\r\n            </React.Fragment>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default NavBar;\r\n","import React from \"react\";\r\n\r\nconst Input = ({ name, label, errors, ...rest }) => {\r\n  return (\r\n    <div className=\"form-group\">\r\n      <label htmlFor={name}>{label}</label>\r\n      <input {...rest} name={name} id={name} className=\"form-control\" />\r\n      {errors && <div className=\"alert alert-danger\">{errors}</div>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Input;\r\n","import React from \"react\";\r\n\r\nconst Select = ({ name, label, options, errors, ...rest }) => {\r\n  return (\r\n    <div className=\"form-group\">\r\n      <label htmlFor={name}>{label}</label>\r\n      <select name={name} id={name} {...rest} className=\"form-control\">\r\n        <option value=\"\" />\r\n        {options.map(options => (\r\n          <option key={options._id} value={options._id}>\r\n            {options.name}\r\n          </option>\r\n        ))}\r\n      </select>\r\n      {errors && <div className=\"alert alert-danger\">{errors}</div>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Select;\r\n","import React, { Component } from \"react\";\r\nimport Joi from \"joi-browser\";\r\nimport Input from \"./input\";\r\nimport Select from \"./select\";\r\n\r\nclass Form extends Component {\r\n  state = {\r\n    data: {},\r\n    error: {}\r\n  };\r\n\r\n  validate = () => {\r\n    const options = { abortEarly: false };\r\n    const { error } = Joi.validate(this.state.data, this.schema, options);\r\n    if (!error) return null;\r\n\r\n    const errors = {};\r\n    for (let item of error.details) errors[item.path[0]] = item.message;\r\n    return errors;\r\n  };\r\n\r\n  validateProperty = ({ name, value }) => {\r\n    const obj = { [name]: value };\r\n    const schema = { [name]: this.schema[name] };\r\n    const { error } = Joi.validate(obj, schema);\r\n    return error ? error.details[0].message : null;\r\n  };\r\n\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n    const errors = this.validate();\r\n    this.setState({ errors: errors || {} });\r\n    if (errors) return;\r\n\r\n    this.doSubmit();\r\n  };\r\n\r\n  handleChange = ({ currentTarget: input }) => {\r\n    const errors = { ...this.state.errors };\r\n    const errorMessage = this.validateProperty(input);\r\n    if (errorMessage) errors[input.name] = errorMessage;\r\n    else delete errors[input.name];\r\n\r\n    const data = { ...this.state.data };\r\n    data[input.name] = input.value;\r\n    this.setState({ data, errors });\r\n  };\r\n\r\n  renderButton = label => {\r\n    return (\r\n      <button disabled={this.validate()} className=\"btn btn-primary\">\r\n        {label}\r\n      </button>\r\n    );\r\n  };\r\n\r\n  renderSelect(name, label, options) {\r\n    const { data, errors } = this.state;\r\n    return (\r\n      <Select\r\n        name={name}\r\n        value={data[name]}\r\n        label={label}\r\n        options={options}\r\n        onChange={this.handleChange}\r\n        errors={errors[name]}\r\n      />\r\n    );\r\n  }\r\n\r\n  renderInput(name, label, type = \"text\") {\r\n    const { data, errors } = this.state;\r\n    return (\r\n      <Input\r\n        type={type}\r\n        name={name}\r\n        value={data[name]}\r\n        label={label}\r\n        onChange={this.handleChange}\r\n        errors={errors[name]}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nexport default Form;\r\n","import React from \"react\";\r\nimport Form from \"./common/form\";\r\nimport Joi from \"joi-browser\";\r\nimport { getGenres } from \"./../services/genreService\";\r\nimport { getMovie, saveMovie } from \"./../services/movieService\";\r\n\r\nclass MovieForm extends Form {\r\n  state = {\r\n    data: {\r\n      title: \"\",\r\n      genreId: \"\",\r\n      numberInStock: \"\",\r\n      dailyRentalRate: \"\"\r\n    },\r\n    genres: [],\r\n    errors: []\r\n  };\r\n\r\n  schema = {\r\n    title: Joi.string()\r\n      .required()\r\n      .label(\"Title\"),\r\n    genreId: Joi.string()\r\n      .required()\r\n      .label(\"Genre\"),\r\n    numberInStock: Joi.number()\r\n      .required()\r\n      .min(0)\r\n      .max(100)\r\n      .label(\"Number in stock\"),\r\n    dailyRentalRate: Joi.number()\r\n      .required()\r\n      .min(0)\r\n      .max(10)\r\n      .label(\"Rate\")\r\n  };\r\n\r\n  async populateGenre() {\r\n    const { data: genres } = await getGenres();\r\n    this.setState({ genres });\r\n  }\r\n\r\n  async populateMovie() {\r\n    try {\r\n      const movieId = this.props.match.params.id;\r\n      if (movieId === \"new\") return;\r\n      const { data: movie } = await getMovie(movieId);\r\n      this.setState({ data: this.mapToViewModel(movie) });\r\n    } catch (ex) {\r\n      if (ex.response && ex.response.status === 404)\r\n        this.props.history.replace(\"/not-found\");\r\n    }\r\n  }\r\n\r\n  async componentDidMount() {\r\n    await this.populateGenre();\r\n    await this.populateMovie();\r\n  }\r\n\r\n  mapToViewModel(movie) {\r\n    return {\r\n      _id: movie._id,\r\n      title: movie.title,\r\n      genreId: movie.genreId,\r\n      numberInStock: movie.numberInStock,\r\n      dailyRentalRate: movie.dailyRentalRate\r\n    };\r\n  }\r\n\r\n  async doSubmit() {\r\n    await saveMovie(this.state.data);\r\n    this.props.history.push(\"/movies\");\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h1>Movie Form</h1>\r\n        <form onSubmit={this.handleSubmit}>\r\n          {this.renderInput(\"title\", \"Title\")}\r\n          {this.renderSelect(\"genreId\", \"Genre\", this.state.genres)}\r\n          {this.renderInput(\"numberInStock\", \"Number in stock\")}\r\n          {this.renderInput(\"dailyRentalRate\", \"Daily Rental rate\")}\r\n          {this.renderButton(\"Add\")}\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default MovieForm;\r\n\r\n// const MovieForm = ({ match, history }) => {\r\n//   return (\r\n//     <div>\r\n//       <h1>Movie Form {match.params.id}</h1>\r\n//       <button\r\n//         className=\"btn btn-primary\"\r\n//         onClick={() => history.push(\"/movies\")}\r\n//       >\r\n//         Save\r\n//       </button>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n//export default MovieForm;\r\n","import http from \"./httpService\";\r\nimport jwtDecode from \"jwt-decode\";\r\nconst apiEndpoint = \"/auth\";\r\n\r\nconst tokenKey = \"token\";\r\n\r\nhttp.setJwt(getJwt());\r\n\r\nexport async function Login(email, password) {\r\n  const { data: jwt } = await http.post(apiEndpoint, { email, password });\r\n  localStorage.setItem(tokenKey, jwt);\r\n}\r\n\r\nexport function getCurrentUser() {\r\n  try {\r\n    const jwt = localStorage.getItem(tokenKey);\r\n    return jwtDecode(jwt);\r\n  } catch (ex) {\r\n    return null;\r\n  }\r\n}\r\n\r\nexport function logout() {\r\n  localStorage.removeItem(tokenKey);\r\n}\r\n\r\nexport function loginWithJwt(jwt) {\r\n  localStorage.setItem(tokenKey, jwt);\r\n}\r\n\r\nexport function getJwt() {\r\n  return localStorage.getItem(tokenKey);\r\n}\r\n","import React, { Component } from \"react\";\r\nimport Joi from \"joi-browser\";\r\nimport Form from \"./common/form\";\r\n\r\nimport { Login } from \"./../services/authService\";\r\n\r\nclass LoginForm extends Form {\r\n  state = {\r\n    data: { username: \"\", password: \"\" },\r\n    errors: {}\r\n  };\r\n\r\n  schema = {\r\n    username: Joi.string()\r\n      .required()\r\n      .label(\"Username\"),\r\n    password: Joi.string()\r\n      .required()\r\n      .label(\"Password\")\r\n  };\r\n\r\n  doSubmit = async () => {\r\n    try {\r\n      const { data } = this.state;\r\n      await Login(data.username, data.password);\r\n\r\n      window.location = \"/\";\r\n    } catch (ex) {\r\n      if (ex.response && ex.response.status === 400) {\r\n        const errors = { ...this.state.errors };\r\n        errors.username = ex.response.data;\r\n        this.setState({ errors });\r\n      }\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h1>Login</h1>\r\n        <form onSubmit={this.handleSubmit}>\r\n          {this.renderInput(\"username\", \"Username\")}\r\n          {this.renderInput(\"password\", \"Password\", \"password\")}\r\n          {this.renderButton(\"Login\")}\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default LoginForm;\r\n","import http from \"./httpService\";\r\n\r\nconst apiEndpoint = \"/users\";\r\n\r\nexport function register(user) {\r\n  return http.post(apiEndpoint, {\r\n    email: user.username,\r\n    password: user.password,\r\n    name: user.name\r\n  });\r\n}\r\n","import React, { Component } from \"react\";\r\nimport Form from \"./common/form\";\r\nimport Joi from \"joi-browser\";\r\nimport * as userService from \"./../services/userService\";\r\nimport { loginWithJwt } from \"../services/authService\";\r\n\r\nclass Register extends Form {\r\n  state = {\r\n    data: { username: \"\", password: \"\", name: \"\" },\r\n    errors: {}\r\n  };\r\n\r\n  schema = {\r\n    username: Joi.string()\r\n      .email()\r\n      .required()\r\n      .label(\"Username\"),\r\n    password: Joi.string()\r\n      .required()\r\n      .min(5)\r\n      .label(\"Password\"),\r\n    name: Joi.string()\r\n      .required()\r\n      .label(\"name\")\r\n  };\r\n\r\n  async doSubmit() {\r\n    try {\r\n      const response = await userService.register(this.state.data);\r\n      loginWithJwt(response.headers[\"x-auth-token\"]);\r\n      window.location = \"/\";\r\n    } catch (ex) {\r\n      if (ex.response && ex.response.status === 400) {\r\n        const errors = { ...this.state.errors };\r\n        errors.username = ex.response.data;\r\n        this.setState({ errors });\r\n      }\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h1>Register</h1>\r\n        <form onSubmit={this.handleSubmit}>\r\n          {this.renderInput(\"username\", \"Username\")}\r\n          {this.renderInput(\"password\", \"Password\", \"password\")}\r\n          {this.renderInput(\"name\", \"Name\")}\r\n          {this.renderButton(\"Register\")}\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Register;\r\n","import React, { Component } from \"react\";\r\nimport { logout } from \"../services/authService\";\r\n\r\nclass Logout extends Component {\r\n  componentDidMount() {\r\n    logout();\r\n    window.location = \"/\";\r\n  }\r\n  render() {\r\n    return null;\r\n  }\r\n}\r\n\r\nexport default Logout;\r\n","import React, { Component } from \"react\";\nimport { ToastContainer } from \"react-toastify\";\n\nimport \"react-toastify/dist/ReactToastify.css\";\nimport { Route, Redirect, Switch } from \"react-router-dom\";\nimport Movies from \"./components/movies\";\nimport Customers from \"./components/customers\";\nimport Rentals from \"./components/rentals\";\nimport NotFound from \"./components/notFound\";\nimport NavBar from \"./components/navBar\";\nimport MovieForm from \"./components/movieForm\";\nimport LoginForm from \"./components/loginForm\";\nimport RegisterForm from \"./components/registerForm\";\nimport Logout from \"./components/logout\";\nimport { getCurrentUser } from \"./services/authService\";\nimport \"./App.css\";\n\nclass App extends Component {\n  state = {};\n\n  componentDidMount() {\n    const user = getCurrentUser();\n    this.setState({ user });\n  }\n  render() {\n    const { user } = this.state;\n    return (\n      <React.Fragment>\n        <ToastContainer />\n        <NavBar user={this.state.user} />\n        <main className=\"container\">\n          <Switch>\n            <Route\n              path=\"/movies/:id\"\n              render={props => {\n                if (!user) return <Redirect to=\"/login\" />;\n                return <MovieForm {...props} />;\n              }}\n            />\n            <Route\n              path=\"/movies\"\n              render={props => <Movies {...props} user={this.state.user} />}\n            />\n            <Route path=\"/customers\" component={Customers} />\n            <Route path=\"/rentals\" component={Rentals} />\n            <Route path=\"/login\" component={LoginForm} />\n            <Route path=\"/logout\" component={Logout} />\n            <Route path=\"/register\" component={RegisterForm} />\n            <Route path=\"/not-found\" component={NotFound} />\n            <Redirect from=\"/\" exact to=\"/movies\" />\n            <Redirect to=\"/not-found\" />\n          </Switch>\n        </main>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport \"font-awesome/css/font-awesome.css\";\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}